---------------------------------------------------------------VIM------------------------------------------------------------
p: 在光标之后粘贴。

:w – 保存修改
:wq – 保存并退出。

yy or Y: 复制整行文本。
y[n]w: 复制一(n)个词。

删除操作
在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)
dd：删除游标所在的那一整行(常用)
ndd: n 为数字。删除光标所在的向下 n 行，例如 20dd 则是删除 20 行 (常用)
d1G:删除光标所在到第一行的所有数据
dG:删除光标所在到最后一行的所有数据
d$:删除游标所在处，到该行的最后一个字符
d0:那个是数字的 0 ，删除游标所在处，到该行的最前面一个字符

复制操作
yy：复制游标所在的那一行(常用)
nyy：n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)
y1G：复制游标所在行到第一行的所有数据
yG：复制游标所在行到最后一行的所有数据
y0：复制光标所在的那个字符到该行行首的所有数据
y$：复制光标所在的那个字符到该行行尾的所有数据 


J：将光标所在行与下一行的数据结合成同一行
u：复原前一个动作。(常用)
[Ctrl]+r：重做上一个动作。(常用)

光标移动
0 或功能键[Home]:这是数字『 0 』：移动到这一行的最前面字符处 (常用)
$ 或功能键[End]:移动到这一行的最后面字符处(常用)
G：移动到这个档案的最后一行(常用)
nG：n 为数字。移动到这个档案的第 n 行。例如 20G 则会移动到这个档案的第 20 行(可配合 :set nu)
gg：移动到这个档案的第一行，相当于 1G 啊！ (常用)
n<Enter>:n 为数字。光标向下移动 n 行(常用)

/word:向光标之下寻找一个名称为 word 的字符串。例如要在档案内搜寻 vbird 这个字符串，就输入 /vbird 即可！ (常用)
?word: 向光标之上寻找一个字符串名称为 word 的字符串。


vim 快速选中并复制粘贴替换一个单词
https://blog.csdn.net/luo200618/article/details/52199567
按 v 按e 是选中一个单词，按 v 按e 按y，是选中并且复制
yw：复制当前单词



---------------------------------------------------------------LINUX------------------------------------------------------------
服务器上文件权限设置
chmod 777 *.py
chmod -R 777 文件夹名字

服务器上压缩与解压
-----zip------
zip -r abc.zip dir
将dir和1.txt同时压缩到abc.zip：zip -r abc.zip dir 1.txt
unzip abc.zip

-----Linux下 “.tar.gz”格式的解压与压缩------
压缩：
tar -zcvf tsingoal.tar.gz ./tsingoal 把当前目录的tsingoal文件压缩为 tsingoal.tar.gz文件
解压：
tar -zxvf tsingoal.tar.gz 把tsingoal.tar.gz文件解压到当前目录




查看磁盘占用
df -h
列出当前文件夹下每个文件占用内存大小：du -ah --max-depth=1 ./
列出当前文件夹下每个文件夹占用内存大小：du -h ./

统计当前目录下文件的个数（不包括目录）:ls -l | grep "^-" | wc -l
统计当前目录下文件的个数（包括子目录）:ls -lR| grep "^-" | wc -l
查看某目录下文件夹(目录)的个数（包括子目录）:ls -lR | grep "^d" | wc -l
ls -l

创建虚拟环境以及激活虚拟环境
conda create -n pytorch python=3.6
source ~/.bashrc
conda activate pytorch
conda deactivate pytorch
conda remove -n your_env_name(虚拟环境名称) --all
conda remove --name your_env_name  package_name  # 删除环境中的某个包

在终端执行程序时指定GPU  
CUDA_VISIBLE_DEVICES=0 python your_file.py  # 指定GPU集群中第一块GPU使用,其他的屏蔽掉
os.environ["CUDA_VISIBLE_DEVICES"] = "0"

linux查看cuda版本
cat /usr/local/cuda/version.txt
nvcc -v


-----------------------------------------pytorch环境配置问题--------------------------------------------

-----------------------------------------tensorflow环境配置问题-----------------------------------------

tensorflow CUDA cudnn 版本对应关系:
https://blog.csdn.net/yuejisuo1948/article/details/81043962






